{"version":3,"sources":["assets/logo.svg","assets/splash2.svg","components/establishments/fixtures.js","components/establishments/Establishment.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","establishments","id","name","description","Establishment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","like","likeCounter","state","dislikeCounter","isLiked","isDisliked","setState","dislike","favori","upIcon","react_default","a","createElement","className","aria-hidden","downIcon","starIcon","onClick","establishment","Component","App","randomPseudo","possible","size","Math","floor","random","i","charAt","length","pseudo","searchStringUser","handleChange","bind","assertThisInitialized","e","target","value","console","log","_this2","listEstablishment","filter","searchText","toLowerCase","match","map","establishments_Establishment","key","src","logo","alt","splash","title","type","placeholder","walue","onChange","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a4524aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.19c8b357.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash2.69e23b84.svg\";","export const establishments = [\n  {\n    id          : \"0890786GH\",\n    name        : \"Biberium\",\n    description : \"Un super bar karaoké\"\n  },\n  {\n    id          : \"0890786GD\",\n    name        : \"Brew Dogs\",\n    description : \"Un super bar à bière\"\n  },\n  {\n    id          : \"MJLMH0389\",\n    name        : \"Batonier\",\n    description : \"Un super bar de fin de soirée\"\n  },\n  {\n    id          : \"XERTY3652\",\n    name        : \"Flop Flop\",\n    description : \"Un super bar de qui fait flop flop\"\n  }\n]\n","// Fichier : ./src/components/establishments/Establishments.js\n\nimport React, { Component } from 'react'\n\nclass Establishment extends Component {\n\n    constructor(props) {\n\n        super(props);\n        // On initialise nos deux variables\n        this.state = {\n            isLiked         : false,\n            isDisliked      : false,\n            likeCounter     : 0,\n            dislikeCounter  : 0,\n            favori          : false\n        }\n\n    }\n\n    // fonction appelée lors du clic sur l'élément \"like\"\n    like = () =>{\n\n      let likeCounter     = this.state.likeCounter;\n      let dislikeCounter  = this.state.dislikeCounter;\n\n      likeCounter     += !this.state.isLiked ? 1 : -1\n      dislikeCounter  += this.state.isDisliked ? -1 : 0\n\n        this.setState({\n            isLiked     : !this.state.isLiked,\n            isDisliked  : this.state.isDisliked ? !this.state.isDisliked : this.state.isDisliked,\n            likeCounter : likeCounter,\n            dislikeCounter : dislikeCounter\n        })\n    }\n\n    // fonction appelée lors du clic sur l'élément \"dislike\"\n    dislike = () =>{\n\n      let likeCounter     = this.state.likeCounter;\n      let dislikeCounter  = this.state.dislikeCounter;\n\n      dislikeCounter  +=  !this.state.isDisliked ? 1 : -1\n      likeCounter     +=  this.state.isLiked ? -1 : 0\n\n        this.setState({\n            isDisliked  : !this.state.isDisliked,\n            isLiked     : this.state.isLiked ? !this.state.isLiked : this.state.isLiked,\n            likeCounter     : likeCounter,\n            dislikeCounter  : dislikeCounter\n        })\n    }\n\n    favori = () =>{\n        this.setState({\n            favori  : !this.state.favori\n          })\n      }\n\n\n    render() {\n\n        // On définit les éléments \"upIcon(like) et downIcon(dislike)\"\n        // on utilise ici Font-Answome (on inclura le fichier css dans ./public.index.html)\n        let upIcon      = <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n        let downIcon    = <i className=\"fa fa-thumbs-down\" aria-hidden=\"true\"></i>\n        let starIcon    = <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\n\n        // Si l'on n'a pas encore \"liké\"\n        if(!this.state.isLiked){\n            upIcon = <i className=\"fa fa-thumbs-o-up\" aria-hidden=\"true\"></i>\n        }\n        // Si l'on a pas encore \"disliké\"\n        if(!this.state.isDisliked){\n            downIcon = <i className=\"fa fa-thumbs-o-down\" aria-hidden=\"true\"></i>\n        }\n\n        if (this.state.favori) {\n            starIcon = <i className=\"fa fa-star favoriIcon\" aria-hidden=\"true\"></i>\n        }\n\n        return (\n          <div className='establishment' >\n              <div className='establishment-favori' >\n                  <button onClick={this.favori}>{ starIcon }</button>\n              </div>\n              <div className='establishment-description' >\n                  <h3>{ this.props.establishment.name }</h3>\n\n                  { this.props.establishment.description }\n              </div>\n              <div className='establishmentLikeDislike' >\n                  <button onClick={this.like}>{ upIcon } </button> <span>{ this.state.likeCounter }</span>\n                  <button onClick={this.dislike}>{ downIcon }</button> <span>{ this.state.dislikeCounter }</span>\n              </div>\n\n          </div>\n      );\n  }\n}\n\nexport default Establishment;\n","import React, { Component } from 'react';\nimport logo                 from '../assets/logo.svg';\nimport splash               from '../assets/splash2.svg';\nimport '../css/App.css';\n\nimport { establishments }    from './establishments/fixtures';\nimport Establishment         from './establishments/Establishment';\n\nclass App extends Component {\n  constructor(props) {\n          super(props);\n          this.state = {\n              pseudo            : \"STRANGER\",\n              searchStringUser  : \"\"\n          }\n          this.handleChange = this.handleChange.bind(this);\n      }\n      handleChange(e){\n        this.setState({searchStringUser: e.target.value})\n      }\n\n      componentWillMount () {\n              console.log(\"componentWillMount\")\n          }\n\n          componentDidMount () {\n              console.log(\"componentDidMount\")\n          }\n\n      randomPseudo = () => {\n          let randomPseudo    = \"\"\n          const possible      = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n          const size          = Math.floor(Math.random() * 10) + 5\n          for( let i=0; i < size; i++ ){\n              randomPseudo += possible.charAt(Math.floor(Math.random() * possible.length))\n          }\n          this.setState({\n              pseudo : randomPseudo\n          })\n      }\n\n  render() {\n    const establishmentFilter = establishments.filter((searchText) => {\n            let search = searchText.name + \" \" + searchText.description;\n            return search.toLowerCase().match(this.state.searchStringUser);\n        });\n\n    const listEstablishment = establishmentFilter.map( (establishment) => {\n      return (\n       <Establishment key={ establishment.id } establishment={ establishment }/>\n        )\n    })\n\n    return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <img src={splash} className=\"splash\" alt=\"splash\" />\n                    <h2>Welcome \"{ this.state.pseudo }\" to { this.props.title }</h2>\n                </div>\n                <div className=\"App-intro\">\n                    {/* On appelle notre fonction lors du clic sur le lien */}\n                    <p> <button onClick={ this.randomPseudo } >Changer le pseudo !</button> </p>\n                    <div>\n                      <input type=\"text\" placeholder=\"search\" walue={this.state.searchStringUser} onChange={this.handleChange}/>\n                    </div>\n                    <section>\n                        { listEstablishment }\n                    </section>\n                </div>\n            </div>\n        );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './components/App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<App title = 'HappyDrink'/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}